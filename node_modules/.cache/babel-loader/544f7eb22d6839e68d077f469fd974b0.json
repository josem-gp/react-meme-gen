{"ast":null,"code":"var _jsxFileName = \"/Users/josemanuelgarciaportillo/code/josem-gp/react-meme-gen/src/components/Meme.js\",\n    _s = $RefreshSig$();\n\nimport memesData from \"../memesData.js\";\nimport { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Meme() {\n  _s();\n\n  const [meme, setMeme] = React.useState({\n    topText: \"\",\n    bottomText: \"\",\n    randomImage: \"http://i.imgflip.com/1bij.jpg\"\n  });\n  const [allMemeImages, setAllMemeImages] = React.useState(memesData);\n\n  function getMemeImage() {\n    const memesArray = allMemeImages.data.memes;\n    const randomNumber = Math.floor(Math.random() * memesArray.length);\n    const url = memesArray[randomNumber].url;\n    setMeme(prevMeme => ({ ...prevMeme,\n      randomImage: url\n    }));\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"input\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"input-wrapper\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"Top text\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"Bottom text\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"button\",\n        onClick: getMeme,\n        children: \"Get a new meme image \\uD83D\\uDDBC\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"meme\",\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: meme,\n          alt: \"random-mem\",\n          className: \"meme-image\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"meme--text top\",\n          children: \"One does not simply\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"meme--text bottom\",\n          children: \"Walk into Mordor\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Meme, \"m/MlQgo3WuAjpVQoD3LSX96kPU4=\");\n\n_c = Meme;\nexport default Meme;\n\nvar _c;\n\n$RefreshReg$(_c, \"Meme\");","map":{"version":3,"names":["memesData","useState","Meme","meme","setMeme","React","topText","bottomText","randomImage","allMemeImages","setAllMemeImages","getMemeImage","memesArray","data","memes","randomNumber","Math","floor","random","length","url","prevMeme","getMeme"],"sources":["/Users/josemanuelgarciaportillo/code/josem-gp/react-meme-gen/src/components/Meme.js"],"sourcesContent":["import memesData from \"../memesData.js\";\nimport { useState } from \"react\";\n\nfunction Meme() {\n  const [meme, setMeme] = React.useState({\n    topText: \"\",\n    bottomText: \"\",\n    randomImage: \"http://i.imgflip.com/1bij.jpg\",\n  });\n  const [allMemeImages, setAllMemeImages] = React.useState(memesData);\n\n  function getMemeImage() {\n    const memesArray = allMemeImages.data.memes;\n    const randomNumber = Math.floor(Math.random() * memesArray.length);\n    const url = memesArray[randomNumber].url;\n    setMeme((prevMeme) => ({\n      ...prevMeme,\n      randomImage: url,\n    }));\n  }\n\n  return (\n    <div className=\"input\">\n      <div>\n        <div className=\"input-wrapper\">\n          <input type=\"text\" placeholder=\"Top text\"></input>\n          <input type=\"text\" placeholder=\"Bottom text\"></input>\n        </div>\n        <button className=\"button\" onClick={getMeme}>\n          Get a new meme image ðŸ–¼\n        </button>\n        <div className=\"meme\">\n          <img src={meme} alt=\"random-mem\" className=\"meme-image\" />\n          <h2 className=\"meme--text top\">One does not simply</h2>\n          <h2 className=\"meme--text bottom\">Walk into Mordor</h2>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default Meme;\n"],"mappings":";;;AAAA,OAAOA,SAAP,MAAsB,iBAAtB;AACA,SAASC,QAAT,QAAyB,OAAzB;;;AAEA,SAASC,IAAT,GAAgB;EAAA;;EACd,MAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBC,KAAK,CAACJ,QAAN,CAAe;IACrCK,OAAO,EAAE,EAD4B;IAErCC,UAAU,EAAE,EAFyB;IAGrCC,WAAW,EAAE;EAHwB,CAAf,CAAxB;EAKA,MAAM,CAACC,aAAD,EAAgBC,gBAAhB,IAAoCL,KAAK,CAACJ,QAAN,CAAeD,SAAf,CAA1C;;EAEA,SAASW,YAAT,GAAwB;IACtB,MAAMC,UAAU,GAAGH,aAAa,CAACI,IAAd,CAAmBC,KAAtC;IACA,MAAMC,YAAY,GAAGC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAgBN,UAAU,CAACO,MAAtC,CAArB;IACA,MAAMC,GAAG,GAAGR,UAAU,CAACG,YAAD,CAAV,CAAyBK,GAArC;IACAhB,OAAO,CAAEiB,QAAD,KAAe,EACrB,GAAGA,QADkB;MAErBb,WAAW,EAAEY;IAFQ,CAAf,CAAD,CAAP;EAID;;EAED,oBACE;IAAK,SAAS,EAAC,OAAf;IAAA,uBACE;MAAA,wBACE;QAAK,SAAS,EAAC,eAAf;QAAA,wBACE;UAAO,IAAI,EAAC,MAAZ;UAAmB,WAAW,EAAC;QAA/B;UAAA;UAAA;UAAA;QAAA,QADF,eAEE;UAAO,IAAI,EAAC,MAAZ;UAAmB,WAAW,EAAC;QAA/B;UAAA;UAAA;UAAA;QAAA,QAFF;MAAA;QAAA;QAAA;QAAA;MAAA,QADF,eAKE;QAAQ,SAAS,EAAC,QAAlB;QAA2B,OAAO,EAAEE,OAApC;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QALF,eAQE;QAAK,SAAS,EAAC,MAAf;QAAA,wBACE;UAAK,GAAG,EAAEnB,IAAV;UAAgB,GAAG,EAAC,YAApB;UAAiC,SAAS,EAAC;QAA3C;UAAA;UAAA;UAAA;QAAA,QADF,eAEE;UAAI,SAAS,EAAC,gBAAd;UAAA;QAAA;UAAA;UAAA;UAAA;QAAA,QAFF,eAGE;UAAI,SAAS,EAAC,mBAAd;UAAA;QAAA;UAAA;UAAA;UAAA;QAAA,QAHF;MAAA;QAAA;QAAA;QAAA;MAAA,QARF;IAAA;MAAA;MAAA;MAAA;IAAA;EADF;IAAA;IAAA;IAAA;EAAA,QADF;AAkBD;;GApCQD,I;;KAAAA,I;AAsCT,eAAeA,IAAf"},"metadata":{},"sourceType":"module"}