[{"/Users/josemanuelgarciaportillo/code/josem-gp/react-meme-gen/src/index.js":"1","/Users/josemanuelgarciaportillo/code/josem-gp/react-meme-gen/src/App.js":"2","/Users/josemanuelgarciaportillo/code/josem-gp/react-meme-gen/src/reportWebVitals.js":"3","/Users/josemanuelgarciaportillo/code/josem-gp/react-meme-gen/src/components/Header.js":"4","/Users/josemanuelgarciaportillo/code/josem-gp/react-meme-gen/src/components/Meme.js":"5","/Users/josemanuelgarciaportillo/code/josem-gp/react-meme-gen/src/memesData.js":"6"},{"size":535,"mtime":1652497953091,"results":"7","hashOfConfig":"8"},{"size":210,"mtime":1652510707056,"results":"9","hashOfConfig":"8"},{"size":362,"mtime":1652497953091,"results":"10","hashOfConfig":"8"},{"size":326,"mtime":1652502619923,"results":"11","hashOfConfig":"8"},{"size":2066,"mtime":1652942497672,"results":"12","hashOfConfig":"8"},{"size":18954,"mtime":1652514696802,"results":"13","hashOfConfig":"8"},{"filePath":"14","messages":"15","suppressedMessages":"16","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"155q89o",{"filePath":"17","messages":"18","suppressedMessages":"19","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"21","messages":"22","suppressedMessages":"23","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"24","messages":"25","suppressedMessages":"26","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"27","messages":"28","suppressedMessages":"29","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"30"},{"filePath":"31","messages":"32","suppressedMessages":"33","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/Users/josemanuelgarciaportillo/code/josem-gp/react-meme-gen/src/index.js",[],[],"/Users/josemanuelgarciaportillo/code/josem-gp/react-meme-gen/src/App.js",[],[],[],"/Users/josemanuelgarciaportillo/code/josem-gp/react-meme-gen/src/reportWebVitals.js",[],[],"/Users/josemanuelgarciaportillo/code/josem-gp/react-meme-gen/src/components/Header.js",[],[],"/Users/josemanuelgarciaportillo/code/josem-gp/react-meme-gen/src/components/Meme.js",["34","35"],[],"import memesData from \"../memesData.js\";\nimport { useState, useEffect } from \"react\";\n\nfunction Meme() {\n  const [meme, setMeme] = useState({\n    topText: \"\",\n    bottomText: \"\",\n    randomImage: \"http://i.imgflip.com/1bij.jpg\",\n  });\n  const [allMemeImages, setAllMemeImages] = useState([]);\n  const [error, setError] = useState(\"\");\n\n  function getMemeImage() {\n    const memesArray = allMemeImages.data.memes;\n    const randomNumber = Math.floor(Math.random() * memesArray.length);\n    const url = memesArray[randomNumber].url;\n    setMeme((prevMeme) => ({\n      ...prevMeme,\n      randomImage: url,\n    }));\n  }\n\n  function handleMemeText(event) {\n    const { name, value } = event.target;\n    setMeme((prevMeme) => ({\n      ...prevMeme,\n      [name]: value,\n    }));\n  }\n\n  useEffect(() => {\n    fetch(\"https://api.imgflip.com/get_memes\")\n      .then((result) => {\n        if (!result.ok) {\n          throw Error(\"Error found! Couldn't connect\");\n        }\n        return result.json();\n      })\n      .then((data) => {\n        setAllMemeImages(data);\n      })\n      .catch((err) => {\n        setError(err.message);\n      });\n  }, []);\n\n  return (\n    <div className=\"input\">\n      <div>\n        <div className=\"input-wrapper\">\n          <input\n            type=\"text\"\n            placeholder=\"Top text\"\n            name=\"topText\"\n            value={meme.topText}\n            onChange={handleMemeText}\n          ></input>\n          <input\n            type=\"text\"\n            placeholder=\"Bottom text\"\n            name=\"bottomText\"\n            value={meme.bottomText}\n            onChange={handleMemeText}\n          ></input>\n        </div>\n        <button className=\"button\" onClick={getMemeImage}>\n          Get a new meme image ðŸ–¼\n        </button>\n        <div className=\"meme\">\n          <img src={meme.randomImage} alt=\"random-mem\" className=\"meme-image\" />\n          <h2 className=\"meme--text top\">{meme.topText}</h2>\n          <h2 className=\"meme--text bottom\">{meme.bottomText}</h2>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default Meme;\n","/Users/josemanuelgarciaportillo/code/josem-gp/react-meme-gen/src/memesData.js",["36"],[],{"ruleId":"37","severity":1,"message":"38","line":1,"column":8,"nodeType":"39","messageId":"40","endLine":1,"endColumn":17},{"ruleId":"37","severity":1,"message":"41","line":11,"column":10,"nodeType":"39","messageId":"40","endLine":11,"endColumn":15},{"ruleId":"42","severity":1,"message":"43","line":1,"column":1,"nodeType":"44","endLine":807,"endColumn":3},"no-unused-vars","'memesData' is defined but never used.","Identifier","unusedVar","'error' is assigned a value but never used.","import/no-anonymous-default-export","Assign object to a variable before exporting as module default","ExportDefaultDeclaration"]